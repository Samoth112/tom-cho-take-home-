@import url('https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&family=PT+Mono&display=swap');

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

a {
  text-decoration: none;
}

.main-grid, .main-grid__sub-grid {
  display: grid;
  grid-template-columns: repeat(8, 2.77778% minmax(0, 1fr)) 2.77778%;
  grid-template-rows: max-content minmax(0,1fr);  
  position: relative;
}

/* use this pattern to override main-grid */
.main-grid__sub-grid {
  grid-template-rows: minmax(0, 1fr) max-content;
}

.hero {
  /* prefer to use -1 for the last grid line since it does not require knowing how many columns there are*/
  grid-column: 1 / -1;
  grid-row: 1 / 2;
  /* give height to container, not the image */
  height: 33.75rem;
  overflow: clip;
  position: relative;
}

.hero img {
  z-index: 0;
}

.img--centered {
  left: 50%;
  position: absolute;
  transform: translate(-50%, -50%);
  top: 50%;
}

.overlay {
  background-color: white;
  font-family: "PT Mono";
  grid-column: 4 / 14;
  grid-row: 2 / 3;
  height: 12.5rem;
  position: relative;
  /* since I am not using positioning to place the overlay, I am using transform to recreate the extra 1px of height in the figma file */
  transform: translateY(1px);
  z-index: 1;
}

.edit-link, .cancel-link, .submit {
  border: 0;
  display: inline-block;
  font-family: "PT Mono";
  height: 38px;
  padding: 12px 15px;
}

.edit-link {
  background: #F8CF1C;
  font-size: 14px;
  line-height: 1em;
  text-align: center;
  transform: translateY(-100%) translateY(-1px);
  position: absolute;
  right: 0;
}

.cancel-link {
  background: #FF7F5B;
  color: white;
  font-size: 14px;
  line-height: 1em;
  text-align: center;
  transform: translateX(-1.5px) translateY(-1.5px);
 }

 .submit {
  background: #5FCC9C;
  color: #FFFFFF;
  font-size: 14px;
  line-height: 1em;
  transform: translateY(-1.5px);
 }

.edit-link img {
  padding-right: 8px;
}

.edit-form {
  bottom: 30px;
  left: 75px;
  position: absolute;
  top: 34px;
  right: 80px;
}

.edit-form textarea {
  background: #FCF8F8;
  border: 1px solid #E2E2E2;
  border-radius: 2px;
  font-size: 32px;
  height: 100%;
  line-height: 43px;
  padding: 10px 10px 0 10px;
  resize: none;
  width: 100%;
}

#slug {
  display: none;
  font-size: 11px;
  padding-top: 10px;
}

.date {
  --date-height: 14px;
  color: #8E8E8E;
  font-family: "PT Mono";
  font-size: 12px;
  font-style: normal;
  font-weight: normal;
  height: var(--date-height);
  left: 1.03%;
  line-height: 14px;
  position: absolute;
  /* I prefer to use a variable here to hold the height to make it */
  /* immediately apparent that top property is based on the date element's height */
  top: calc(50% - var(--date-height)/2);
  /* -29px come from half the width of the date, 72px, minus half the height of the tile, 14px */
  /* since positioning of a rotated element acts as if it wasn't rotated, the title element must move */
  /* to the left, 29px: 36px to the left, then 7px back to the right */
  /* this is because elements are rotated about their center, which is halfway from the left and halfway from the top of the element */
  transform: rotate(-90deg) translateY(-29px);
}

.title {
  bottom: 2rem;
  color: #2C2C2C;
  font-size: 2.625rem;
  left: 4.6875rem;
  line-height: 58px;
  right: 4.6875rem;
  top: 3.25rem;
  position: absolute;
}

.article {
  font-family: "Merriweather";
  grid-column: 1 / -1;
  grid-row: 2 / 3;
}

.article .text {
  font-size: 18px;
  grid-column: 4 / 14;
  line-height: 38px;
  padding: 16px 75px;
}

.article .quote {
  color: #2404E7;
  grid-column: 3 / 14;
}

.quote .text {
  font-size: 32px;
  font-weight: 300;
  line-height: 50px;
  padding: 32px 0 16px 0;
}

.byline {
  color: #B5B5B5;
  font-family: "PT Mono";
  font-size: .75rem;
  grid-column: 4 / 14;
  height: 14px;
  line-height: 14px;
  padding: 16px 75px 32px 75px;;
}

.side-meta {
  display: grid;
  grid-column: 1 / 4;
  grid-template-columns: minmax(0, 1fr);
  grid-template-rows: repeat(2, max-content); 
  height: 74px;
  padding: 64px 0 0 0;
}

.author {
  border-bottom: 1px solid #E2E2E2;
  grid-column: 1 / -1;
  height: 28px;
  position: relative;
}

.author-label, .share-label {
  color: #AEAEAE;
  font-family: "PT Mono";
  font-size: 10px;
  height: 14px;
  left: 40px;
  line-height: 14px;
  position: absolute;
}

.author-name {
  color: #1F1F1F;
  font-family: "PT Mono";
  font-size: 12px;
  height: 14px;
  line-height: 14px;
  position: absolute;
  right: 0;
}

.share {
  border-bottom: 1px solid #E2E2E2;
  grid-column: 1 / -1;
  height: 45px;
  position: relative;
}

.share .share-label {
  top: 50%;
  transform: translateY(-50%);
}

.social-icons {
  list-style: none;
  position: absolute;
  right: 0;
  top: 50%;
  transform: translateY(-50%);
}

.social-icons li {
  display: inline;
  padding: 6px;
}

.edit-nav {
  list-style: none;
  position: absolute;
  transform: translateY(-100%);
  right: 0;
}

.edit-nav li {
  display: inline;
}
